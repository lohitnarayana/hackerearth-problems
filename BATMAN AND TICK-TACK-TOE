Batman has defeated Hugo Strange and now he is getting bored as there is too much peace in Gotham City.

To pass his time he used to play 4 X 4 field Tick-Tac-Toe. One Day While playing, Commissioner Gordan Called Batman and he had to leave
immediately so he didnt finish the game. It was Batman's turn in the game when they left it. Find Out whether Batman could have won the
game by making a single turn or not.

The rules of tic-tac-toe are as follows.

Before the first turn all the field cells are empty. The two players take turns placing their signs into empty cells (the first player
places Xs, the second player places Os). The player who places Xs goes first, the another one goes second. The winner is the player who
first gets three of his signs in a row next to each other (horizontal, vertical or diagonal).

Input:

The first line of each test case defines the number of test cases t. then the next 4 line t times gives the tic-tac-toe positions Each
of these lines contains four characters. Each character is '.' (empty cell), 'x' (lowercase English letter x), or 'o' (lowercase English
letter o). It is guaranteed that the position is reachable playing tic-tac-toe, and it is Batman's turn now (in particular, it means
that the game is not finished). It is possible that all the cells are empty, it means that the Both Batman and Robin left without making
single turn.

Output:

Print single line: "YES" in case Batman could have won by making single turn, and "NO" otherwise.

Constraints:
1<=t<=10

SOURCE LINK: https://www.hackerearth.com/practice/basic-programming/implementation/basics-of-implementation/practice-problems/algorithm/batman-and-tick-tack-toe/
SAMPLE INPUT 
3
xx..
.oo.
x...
oox.
o.x.
o...
.x..
ooxx
x..x
..oo
o...
x.xo
SAMPLE OUTPUT 
YES
NO
YES
Explanation
In the first example of the 3 test cases Batman had two winning moves: to the empty cell in the left column and to the leftmost empty
cell in the first row.

In the second It wasn't possible to win by making single turn

In the Third Batman could have won by placing X in the last row between two existing Xs.

 
PROGRAM:
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int c=0,d=0,b=0;
        char a[4][4];
        for(int i=0;i<4;i++)
        {
            for(int j=0;j<4;j++)
            {
                cin>>a[i][j];
                //cout<<a[i][j]<<" ";
                if(a[i][j]=='x')
                    d++;
                if(a[i][j]=='o')
                    b++;
            }
            //cout<<endl;
        }
        //cout<<endl;
        //cout<<d<<" "<<b<<"\n";
        if(d==b)
        {
        for(int i=0;i<4;i++)
        {
            for(int j=0;j<2;j++)
            {
                if((a[i][j]=='x' and a[i][j+1]=='x' and a[i][j+2]=='.')||(a[i][j]=='x' and a[i][j+1]=='.' and a[i][j+2]=='x')||(a[i][j]=='.' and a[i][j+1]=='x' and a[i][j+2]=='x'))
                {
                    //cout<<"1\n";
                    c=1;
                    break;
                }
            }
            if(c==1)
                break;
        }
        if(c!=1)
        {
            for(int j=0;j<4;j++)
            {
                for(int i=0;i<2;i++)
                {
                    if((a[i][j]=='x' and a[i+1][j]=='x' and a[i+2][j]=='.')||(a[i][j]=='x' and a[i+1][j]=='.' and a[i+2][j]=='x')||(a[i][j]=='.' and a[i+1][j]=='x' and a[i+2][j]=='x'))
                    {
                        //cout<<"2\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        if(c!=1)
        {
            for(int i=0;i<2;i++)
            {
                for(int j=0;j<2;j++)
                {
                    if((a[i][j]=='x' and a[i+1][j+1]=='x' and a[i+2][j+2]=='.')||(a[i][j]=='x' and a[i+1][j+1]=='.' and a[i+2][j+2]=='x')||(a[i][j]=='.' and a[i+1][j+1]=='x' and a[i+2][j+2]=='x'))
                    {
                        //cout<<"3\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        if(c!=1)
        {
            for(int i=0;i<2;i++)
            {
                for(int j=3;j>1;j--)
                {
                    if((a[i][j]=='x' and a[i+1][j-1]=='x' and a[i+2][j-2]=='.')||(a[i][j]=='x' and a[i+1][j-1]=='.' and a[i+2][j-2]=='x')||(a[i][j]=='.' and a[i+1][j-1]=='x' and a[i+2][j-2]=='x'))
                    {
                        //cout<<"4\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        }
        else
        {
            for(int i=0;i<4;i++)
        {
            for(int j=0;j<2;j++)
            {
                if((a[i][j]=='o' and a[i][j+1]=='o' and a[i][j+2]=='.')||(a[i][j]=='o' and a[i][j+1]=='.' and a[i][j+2]=='o')||(a[i][j]=='.' and a[i][j+1]=='o' and a[i][j+2]=='o'))
                {
                    //cout<<"1\n";
                    c=1;
                    break;
                }
            }
            if(c==1)
                break;
        }
        if(c!=1)
        {
            for(int j=0;j<4;j++)
            {
                for(int i=0;i<2;i++)
                {
                    if((a[i][j]=='o' and a[i+1][j]=='o' and a[i+2][j]=='.')||(a[i][j]=='o' and a[i+1][j]=='.' and a[i+2][j]=='o')||(a[i][j]=='.' and a[i+1][j]=='o' and a[i+2][j]=='o'))
                    {
                        //cout<<"2\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        if(c!=1)
        {
            for(int i=0;i<2;i++)
            {
                for(int j=0;j<2;j++)
                {
                    if((a[i][j]=='o' and a[i+1][j+1]=='o' and a[i+2][j+2]=='.')||(a[i][j]=='o' and a[i+1][j+1]=='.' and a[i+2][j+2]=='o')||(a[i][j]=='.' and a[i+1][j+1]=='o' and a[i+2][j+2]=='o'))
                    {
                        //cout<<"3\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        if(c!=1)
        {
            for(int i=0;i<2;i++)
            {
                for(int j=3;j>1;j--)
                {
                    if((a[i][j]=='o' and a[i+1][j-1]=='o' and a[i+2][j-2]=='.')||(a[i][j]=='o' and a[i+1][j-1]=='.' and a[i+2][j-2]=='o')||(a[i][j]=='.' and a[i+1][j-1]=='o' and a[i+2][j-2]=='o'))
                    {
                        //cout<<"4\n";
                        c=1;
                        break;
                    }
                }
                if(c==1)
                    break;
            }
        }
        }
        if(c==1)
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
}


